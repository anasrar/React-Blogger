{"version":3,"sources":["components/NavBar.jsx","components/PostList.jsx","components/CommentList.jsx","components/PostPage.jsx","components/BodyList.jsx","App.js","serviceWorker.js","index.js"],"names":["ExpansionPanel","withStyles","root","boxShadow","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","theme","padding","spacing","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","NavBar","state","isDrawerOpen","expandTags","classes","this","props","className","AppBar","position","Container","maxWidth","Toolbar","IconButton","edge","menuButton","color","aria-label","onClick","setState","Typography","title","variant","noWrap","search","action","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","name","Drawer","open","Boolean","onClose","list","role","drawerHeader","Divider","Box","profileMe","component","Avatar","alt","src","avatarMe","gutterBottom","square","onChange","prefState","expandIcon","aria-controls","id","List","listParent","label","sort","a","b","term","map","arr","i","Link","underline","href","key","ListItem","button","ListItemIcon","ListItemText","primary","Component","flexGrow","top","zIndex","marginRight","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","height","pointerEvents","alignItems","justifyContent","transition","transitions","create","mixins","toolbar","textAlign","marginBottom","paddingLeft","PostList","isFetch","listPosts","listPerPage","onPage","setAnchorEl","shareURL","loadingBar","url","isLabelPage","match","params","query","isSearchPage","qs","parse","location","ignoreQueryPrefix","q","axios","adapter","jsonpAdapter","callbackParamName","then","res","data","feed","entry","isLastPage","length","updateLabel","category","event","newListPosts","Fragment","Array","Grid","item","xs","sm","box","Card","CardContent","Skeleton","skeletonTitle","media","CardHeader","avatar","skeletoSubHeader","subheader","post","link","filter","rel","toString","text","$t","maxLine","ellipsis","trimRight","basedOn","media$thumbnail","CardMedia","image","replace","author","gd$image","avatarTransparent","optionDesktop","Badge","badgeContent","thr$total","aria-haspopup","currentTarget","dateClass","date","published","Button","size","disabled","e","loadMore","CircularProgress","thickness","loadingMargin","anchorEl","keepMounted","target","MenuItem","paddingTop","paddingBottom","paddingRight","indigo","grey","optionMobile","columnReverse","flexDirection","skeletonAvatar","lastPageText","CommentList","isReply","replyID","showOn","isFetchComment","commentList","comment","card","commentContent","isComment","cardReply","frameBorder","blogID","postID","iFrameHeight","commentReplyList","related","reply","newReply","iconMarginRight","parseInt","totalComment","skeletonContent","skeletoText","PostPage","commentButtonHide","newComment","commentRef","React","createRef","iFrameChangeHeight","origin","includes","substring","document","arr1","pathname","window","addEventListener","split","pop","processMap","p","Breadcrumbs","separator","fontSize","maxItems","current","scrollIntoView","behavior","block","dangerouslySetInnerHTML","__html","ref","exec","mb","fetchCommentList","BodyList","container","justify","path","exact","render","paper","secondary","App","CssBaseline","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e57b7c1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport LabelIcon from '@material-ui/icons/Label'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\n\r\nimport { fade, withStyles } from '@material-ui/core/styles'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { Box, Link } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 999\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 120,\r\n            '&:focus': {\r\n                width: 200,\r\n            },\r\n        },\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 10px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    profileMe: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\"\r\n    },\r\n    avatarMe: {\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        marginBottom: theme.spacing(1),\r\n        width: \"120px\",\r\n        height: \"120px\"\r\n    },\r\n    list: {\r\n        width: 250\r\n    },\r\n    listParent: {\r\n        width: \"100%\"\r\n    },\r\n    ListItem: {\r\n        paddingLeft: theme.spacing(4)\r\n    },\r\n})\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        '&:before': {\r\n            display: 'none',\r\n        },\r\n        '&$expanded': {\r\n            margin: 'auto',\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel)\r\n\r\nconst ExpansionPanelSummary = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(0, 2),\r\n        minHeight: 56,\r\n        '&$expanded': {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        '&$expanded': {\r\n            margin: '12px 0',\r\n        },\r\n    },\r\n    expanded: {},\r\n}))(MuiExpansionPanelSummary)\r\n\r\nconst ExpansionPanelDetails = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails)\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        isDrawerOpen: false,\r\n        expandTags: true\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Container maxWidth=\"lg\">\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"Open Drawer\"\r\n                                onClick={() => {\r\n                                    this.setState({ isDrawerOpen: true })\r\n                                }}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography className={classes.title} variant=\"h6\" noWrap>React Blogger</Typography>\r\n                            <form className={classes.search} action=\"/search/\">\r\n                                <div className={classes.searchIcon}>\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    name=\"q\"\r\n                                />\r\n                            </form>\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n                <Drawer\r\n                    open={Boolean(this.state.isDrawerOpen)}\r\n                    onClose={() => {\r\n                        this.setState({ isDrawerOpen: false })\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={classes.list}\r\n                        role=\"presentation\"\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <IconButton onClick={() => {\r\n                                this.setState({ isDrawerOpen: false })\r\n                            }}>\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                        <Divider />\r\n                        <Box className={classes.profileMe} component=\"div\">\r\n                            <Avatar alt=\"Anas RAR\" src=\"//avatars0.githubusercontent.com/u/38805204?v=4\" className={classes.avatarMe} />\r\n                            <Typography variant=\"h5\" component=\"h1\" gutterBottom>Anas RAR</Typography>\r\n                            <Typography variant=\"caption\" gutterBottom>I Hate Everything on This Universe</Typography>\r\n                        </Box>\r\n                        <Divider />\r\n                        <ExpansionPanel square expanded={this.state.expandTags} onChange={() => {\r\n                            this.setState(prefState => {\r\n                                return { expandTags: !prefState.expandTags }\r\n                            })\r\n                        }}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"tags-content\"\r\n                                id=\"tags-header\"\r\n                            >\r\n\r\n                                <Typography >Labels</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <List className={classes.listParent}>\r\n                                    {this.props.label.sort((a, b) => (a.term > b.term) ? 1 : ((b.term > a.term) ? -1 : 0)).map((arr, i) => (\r\n                                        <Link color=\"inherit\"\r\n                                            underline=\"none\"\r\n                                            href={\"/search/label/\" + arr.term}\r\n                                            component=\"a\"\r\n                                            key={i}\r\n                                        >\r\n                                            <ListItem button className={classes.ListItem}>\r\n                                                <ListItemIcon><LabelIcon /></ListItemIcon>\r\n                                                <ListItemText primary={arr.term} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                    ))}\r\n                                </List>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        <Divider />\r\n                    </div>\r\n                </Drawer>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(NavBar)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport Box from '@material-ui/core/Box'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport CommentIcon from '@material-ui/icons/Comment'\r\nimport ShareIcon from '@material-ui/icons/Share'\r\n\r\nimport { indigo, grey } from '@material-ui/core/colors'\r\n\r\nimport axios from 'axios'\r\nimport jsonpAdapter from 'axios-jsonp'\r\nimport LinesEllipsis from 'react-lines-ellipsis'\r\nimport TimeAgo from 'react-timeago'\r\nimport qs from 'qs'\r\n\r\nconst styles = theme => ({\r\n    media: {\r\n        height: 200,\r\n    },\r\n    box: {\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(1.5),\r\n            paddingRight: theme.spacing(1.5)\r\n        }\r\n    },\r\n    avatar: {\r\n        backgroundColor: indigo[500]\r\n    },\r\n    avatarTransparent: {\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    dateClass: {\r\n        color: grey[500]\r\n    },\r\n    optionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'inline-flex',\r\n        }\r\n    },\r\n    optionMobile: {\r\n        display: 'inline-flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        }\r\n    },\r\n    columnReverse: {\r\n        flexDirection: 'column-reverse',\r\n        [theme.breakpoints.up('sm')]: {\r\n            flexDirection: 'row',\r\n        }\r\n    },\r\n    skeletonTitle: {\r\n        margin: theme.spacing(1, 0)\r\n    },\r\n    skeletonAvatar: {\r\n        margin: theme.spacing(0)\r\n    },\r\n    skeletoSubHeader: {\r\n        margin: theme.spacing(0.5, 0)\r\n    },\r\n    lastPageText: {\r\n        color: grey[500]\r\n    },\r\n    loadingMargin: {\r\n        margin: theme.spacing(0, 2.5, 0, 0)\r\n    }\r\n})\r\n\r\nclass PostList extends Component {\r\n    state = {\r\n        isFetch: false,\r\n        listPosts: [],\r\n        listPerPage: 6,\r\n        onPage: 1,\r\n        setAnchorEl: null,\r\n        shareURL: \"\",\r\n        loadingBar: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { onPage, listPerPage } = this.state\r\n        const url = this.props.isLabelPage ? \"feeds/posts/default/-/\" + this.props.match.params.label : \"feeds/posts/default\"\r\n        const query = this.props.isSearchPage && qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).q ? \"&q=\" + qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).q : \"\"\r\n        axios({\r\n            url: `${process.env.NODE_ENV === \"development\" ? \"//usereact.blogspot.com\" : \"\"}/${url}?orderby=published&start-index=${onPage}&max-results=${listPerPage}&alt=json-in-script${query}`,\r\n            adapter: jsonpAdapter,\r\n            callbackParamName: 'c'\r\n        }).then(res => {\r\n            if (res.data.feed.entry) {\r\n                const listPosts = res.data.feed.entry\r\n                this.setState({ listPosts, isFetch: true, isLastPage: res.data.feed.entry.length !== 6 })\r\n                this.props.updateLabel(res.data.feed.category)\r\n            } else {\r\n                this.setState({ isFetch: true, isLastPage: true })\r\n                this.props.updateLabel(res.data.feed.category)\r\n            }\r\n        })\r\n    }\r\n\r\n    loadMore(event) {\r\n        const { onPage, listPerPage, listPosts } = this.state\r\n        this.setState({ loadingBar: true })\r\n        const url = this.props.isLabelPage ? \"feeds/posts/default/-/\" + this.props.match.params.label : \"feeds/posts/default\"\r\n        const query = this.props.isSearchPage && qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).q ? \"&q=\" + qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).q : \"\"\r\n        axios({\r\n            url: `${process.env.NODE_ENV === \"development\" ? \"//usereact.blogspot.com\" : \"\"}/${url}?orderby=published&start-index=${onPage * listPerPage + 1}&max-results=${listPerPage}&alt=json-in-script${query}`,\r\n            adapter: jsonpAdapter,\r\n            callbackParamName: 'c'\r\n        }).then(res => {\r\n            if (res.data.feed.entry) {\r\n                const newListPosts = res.data.feed.entry\r\n                this.setState({ listPosts: [...listPosts, ...newListPosts], onPage: onPage + 1, isLastPage: newListPosts.length !== 6, loadingBar: false })\r\n            } else {\r\n                this.setState({ isLastPage: true, loadingBar: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.isFetch ? ([...new Array(6)].map((arr, i) =>\r\n                    <Grid item xs={12} sm={4} key={i} className={classes.box}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    <Skeleton height={19} className={classes.skeletonTitle} />\r\n                                    <Skeleton height={19} className={classes.skeletonTitle} />\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <Skeleton variant=\"rect\" className={classes.media} />\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Skeleton variant=\"circle\" width={40} height={40} className={classes.Avatar} />\r\n                                }\r\n                                title={\r\n                                    <Skeleton height={16} className={classes.skeletoSubHeader} />\r\n                                }\r\n                                subheader={\r\n                                    <Skeleton height={11} width=\"40%\" className={classes.skeletoSubHeader} />\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                )) : null}\r\n                {this.state.listPosts.map((post, i) =>\r\n                    <Grid item xs={12} sm={4} key={i} className={classes.box}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    <Link\r\n                                        color=\"inherit\"\r\n                                        underline=\"none\"\r\n                                        href={post.link.filter(arr => arr.rel === \"alternate\").map(arr => arr.href).toString()}\r\n                                        component=\"a\"\r\n                                    ><LinesEllipsis text={post.title.$t} maxLine='2' ellipsis='...' trimRight basedOn='letters' /></Link>\r\n\r\n                                </Typography>\r\n                            </CardContent>\r\n                            {post.media$thumbnail ? (\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={post.media$thumbnail.url.replace(\"/s72-c/\", \"/s240/\").replace(/^(https?:|)/, '')}\r\n                                    title={post.title.$t}\r\n                                />\r\n                            ) : (\r\n                                    <Skeleton variant=\"rect\" className={classes.media} />\r\n                                )}\r\n                            <CardHeader\r\n                                avatar={post.author[0].gd$image.src === \"https://img1.blogblog.com/img/b16-rounded.gif\" ? (<Avatar aria-label=\"photos\" className={classes.avatar}>{post.author[0].name.$t[0]}</Avatar>) : (<Avatar aria-label=\"photos\" src={post.author[0].gd$image.src} className={classes.avatarTransparent}></Avatar>)\r\n                                }\r\n                                action={\r\n                                    <React.Fragment>\r\n                                        <IconButton aria-label=\"Comment\" className={classes.optionDesktop}>\r\n                                            <Badge badgeContent={post.thr$total.$t} color=\"secondary\">\r\n                                                <CommentIcon />\r\n                                            </Badge>\r\n                                        </IconButton>\r\n                                        <IconButton aria-label=\"Share\" aria-controls=\"Share-menu\" aria-haspopup=\"true\" onClick={(event) => {\r\n                                            const url = post.link.filter(arr => arr.rel === \"alternate\").map(arr => arr.href).toString()\r\n                                            this.setState({ setAnchorEl: event.currentTarget, shareURL: url })\r\n                                        }}>\r\n                                            <ShareIcon />\r\n                                        </IconButton>\r\n                                    </React.Fragment>\r\n                                }\r\n                                title={post.author[0].name.$t}\r\n                                subheader={\r\n                                    <Typography variant=\"caption\" display=\"block\" className={classes.dateClass}><TimeAgo date={post.published.$t} /></Typography>\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n                {\r\n                    this.state.isLastPage ? null : (<Grid item xs={12} className={classes.box}><Box textAlign=\"center\"><Button variant=\"contained\" size=\"large\" color=\"primary\" disabled={this.state.loadingBar} onClick={(e) => {\r\n                        this.loadMore()\r\n                    }}>{this.state.loadingBar ? (<CircularProgress size={30} thickness={5} className={classes.loadingMargin} />) : null}Load More</Button></Box></Grid>)\r\n                }\r\n                <Menu\r\n                    id=\"Share-menu\"\r\n                    anchorEl={this.state.setAnchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.setAnchorEl)}\r\n                    onClose={() => {\r\n                        this.setState({ setAnchorEl: null })\r\n                    }}\r\n                >\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        underline=\"none\"\r\n                        href={\"//twitter.com/share?url=\" + this.state.shareURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    ><MenuItem>Twitter</MenuItem></Link>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        underline=\"none\"\r\n                        href={\"//www.facebook.com/sharer/sharer.php?u=\" + this.state.shareURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    ><MenuItem>Facebook</MenuItem></Link>\r\n                </Menu>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PostList)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport ReplyIcon from '@material-ui/icons/Reply'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nimport { indigo, grey } from '@material-ui/core/colors'\r\n\r\nimport TimeAgo from 'react-timeago'\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        backgroundColor: indigo[500]\r\n    },\r\n    avatarTransparent: {\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    dateClass: {\r\n        color: grey[500]\r\n    },\r\n    box: {\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(1.5),\r\n            paddingRight: theme.spacing(1.5)\r\n        }\r\n    },\r\n    card: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    cardReply: {\r\n        marginLeft: theme.spacing(4),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    commentContent: {\r\n        padding: theme.spacing(0, 2, 2)\r\n    },\r\n    skeletonTitle: {\r\n        margin: theme.spacing(1, 0)\r\n    },\r\n    skeletoSubHeader: {\r\n        margin: theme.spacing(0, 0, 0.5, 0)\r\n    },\r\n    skeletonContent: {\r\n        paddingBottom: theme.spacing(0)\r\n    },\r\n    skeletoText: {\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    iconMarginRight: {\r\n        marginRight: theme.spacing(1.5)\r\n    }\r\n})\r\n\r\nclass CommentList extends Component {\r\n    state = {\r\n        setAnchorEl: null,\r\n        isReply: false,\r\n        replyID: \"\",\r\n        showOn: \"\"\r\n    }\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                {!this.props.isFetchComment ? ([...new Array(parseInt(this.props.totalComment))].map((arr, i) =>\r\n                    <Card key={i} className={classes.card}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Skeleton variant=\"circle\" width={40} height={40} className={classes.Avatar} />\r\n                            }\r\n                            title={\r\n                                <Skeleton height={14} className={classes.skeletoSubHeader} />\r\n                            }\r\n                            subheader={\r\n                                <Skeleton height={12} width=\"40%\" className={classes.skeletoSubHeader} />\r\n                            }\r\n                        />\r\n                        <Box className={classes.commentContent}>\r\n                            <Skeleton height={16} className={classes.skeletoSubHeader} />\r\n                        </Box>\r\n                    </Card>\r\n                )) : (\r\n                        <React.Fragment>\r\n                            {this.props.commentList.map((comment, i) => (\r\n                                <React.Fragment key={i}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardHeader\r\n                                            avatar={comment.author[0].gd$image.src === \"https://img1.blogblog.com/img/b16-rounded.gif\" ? (<Avatar aria-label=\"photos\" className={classes.avatar}>{comment.author[0].name.$t[0]}</Avatar>) : (<Avatar aria-label=\"photos\" src={comment.author[0].gd$image.src} className={classes.avatarTransparent}></Avatar>)\r\n                                            }\r\n                                            action={\r\n                                                <IconButton aria-label=\"Comment Option\" aria-controls=\"Comment-menu\" aria-haspopup=\"true\" onClick={(event) => {\r\n                                                    this.setState({ setAnchorEl: event.currentTarget, isReply: true, replyID: comment.id })\r\n                                                }}>\r\n                                                    <MoreVertIcon />\r\n                                                </IconButton>\r\n                                            }\r\n                                            title={comment.author[0].name.$t}\r\n                                            subheader={\r\n                                                <Typography variant=\"caption\" display=\"block\" className={classes.dateClass}><TimeAgo date={comment.published.$t} /></Typography>\r\n                                            }\r\n                                        />\r\n\r\n                                        <Box className={classes.commentContent}>\r\n                                            {comment.content.$t}\r\n                                        </Box>\r\n                                    </Card>\r\n                                    {!this.props.isComment && this.state.showOn === comment.id ? (\r\n                                        <Card className={classes.cardReply}>\r\n                                            <CardContent>\r\n                                                <iframe title=\"iframe-comment\" frameBorder=\"0\" src={\"//www.blogger.com/comment-iframe.g?blogID=\" + this.props.blogID + \"&postID=\" + this.props.postID + \"&parentID=\" + comment.id + \"&skin=contempo\"} width=\"100%\" height={this.props.iFrameHeight}></iframe>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    ) : null}\r\n                                    {this.props.commentReplyList.filter(arr => arr.related === comment.id).map(reply => (\r\n                                        <Card className={classes.cardReply} key={reply.id}>\r\n                                            <CardHeader\r\n                                                avatar={reply.author[0].gd$image.src === \"https://img1.blogblog.com/img/b16-rounded.gif\" ? (<Avatar aria-label=\"photos\" className={classes.avatar}>{reply.author[0].name.$t[0]}</Avatar>) : (<Avatar aria-label=\"photos\" src={reply.author[0].gd$image.src} className={classes.avatarTransparent}></Avatar>)\r\n                                                }\r\n                                                title={reply.author[0].name.$t}\r\n                                                subheader={\r\n                                                    <Typography variant=\"caption\" display=\"block\" className={classes.dateClass}><TimeAgo date={reply.published.$t} /></Typography>\r\n                                                }\r\n                                                action={\r\n                                                    <IconButton aria-label=\"Comment Option\" aria-controls=\"Comment-menu\" aria-haspopup=\"true\" onClick={(event) => {\r\n                                                        this.setState({ setAnchorEl: event.currentTarget, isReply: false, replyID: reply.id })\r\n                                                    }}>\r\n                                                        <MoreVertIcon />\r\n                                                    </IconButton>\r\n                                                }\r\n                                            />\r\n                                            <Box className={classes.commentContent}>\r\n                                                {reply.content.$t}\r\n                                            </Box>\r\n                                        </Card>\r\n                                    ))}\r\n                                </React.Fragment>\r\n                            ))}\r\n                            <Menu\r\n                                id=\"Comment-menu\"\r\n                                anchorEl={this.state.setAnchorEl}\r\n                                keepMounted\r\n                                open={Boolean(this.state.setAnchorEl)}\r\n                                onClose={() => {\r\n                                    this.setState({ setAnchorEl: null })\r\n                                }}\r\n                            >\r\n                                {this.state.isReply ? (<Box onClick={\r\n                                    () => {\r\n                                        this.setState({ setAnchorEl: null, showOn: this.state.replyID })\r\n                                        this.props.newReply()\r\n                                    }\r\n                                }><MenuItem>\r\n                                        <ReplyIcon className={classes.iconMarginRight} /> Reply\r\n                                </MenuItem></Box>) : null}\r\n                                <Link\r\n                                    color=\"inherit\"\r\n                                    component=\"a\"\r\n                                    underline=\"none\"\r\n                                    href={\"//www.blogger.com/delete-comment.g?blogID=\" + this.props.blogID + \"&postID=\" + this.state.replyID}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                >\r\n                                    <MenuItem><DeleteIcon className={classes.iconMarginRight} /> Delete</MenuItem>\r\n                                </Link>\r\n                            </Menu>\r\n                        </React.Fragment>\r\n                    )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CommentList)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Link from '@material-ui/core/Link'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { indigo, grey } from '@material-ui/core/colors'\r\n\r\nimport CommentIcon from '@material-ui/icons/Comment'\r\nimport ShareIcon from '@material-ui/icons/Share'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\n\r\nimport CommentList from './CommentList'\r\n\r\nimport axios from 'axios'\r\nimport jsonpAdapter from 'axios-jsonp'\r\nimport { Box } from '@material-ui/core'\r\nimport LinesEllipsis from 'react-lines-ellipsis'\r\nimport TimeAgo from 'react-timeago'\r\n\r\nconst styles = theme => ({\r\n    avatar: {\r\n        backgroundColor: indigo[500]\r\n    },\r\n    avatarTransparent: {\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    dateClass: {\r\n        color: grey[500]\r\n    },\r\n    box: {\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(1.5),\r\n            paddingRight: theme.spacing(1.5)\r\n        }\r\n    },\r\n    card: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    skeletonTitle: {\r\n        margin: theme.spacing(1, 0)\r\n    },\r\n    skeletoSubHeader: {\r\n        margin: theme.spacing(0, 0, 0.5, 0)\r\n    },\r\n    skeletonContent: {\r\n        paddingBottom: theme.spacing(0)\r\n    },\r\n    skeletoText: {\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    iconMarginRight: {\r\n        marginRight: theme.spacing(1.5)\r\n    }\r\n})\r\n\r\n\r\nclass PostPage extends Component {\r\n    state = {\r\n        post: null,\r\n        isFetch: false,\r\n        commentButtonHide: false,\r\n        isFetchComment: false,\r\n        commentList: [],\r\n        commentReplyList: [],\r\n        setAnchorEl: null,\r\n        shareURL: \"\",\r\n        newComment: true,\r\n        iFrameHeight: \"92px\"\r\n    }\r\n\r\n    commentRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            url: `${process.env.NODE_ENV === \"development\" ? \"//usereact.blogspot.com\" : \"\"}/feeds/posts/default?q=${document.title}&alt=json-in-script`,\r\n            adapter: jsonpAdapter,\r\n            callbackParamName: 'p'\r\n        }).then(res => {\r\n            if (res.data.feed.entry) {\r\n                const post = res.data.feed.entry.filter(arr => arr.link.filter(arr1 => arr1.rel === \"alternate\")[0].href.includes(document.location.pathname) && arr.title.$t === document.title)[0]\r\n                this.setState({ post, isFetch: true })\r\n                this.props.updateLabel(res.data.feed.category)\r\n            }\r\n        })\r\n        window.addEventListener(\"message\", this.iFrameChangeHeight)\r\n    }\r\n\r\n    fetchCommentList() {\r\n        axios({\r\n            url: `${process.env.NODE_ENV === \"development\" ? \"//usereact.blogspot.com\" : \"\"}/feeds/${this.state.post.id.$t.split(\"-\").pop()}/comments/default?alt=json-in-script&reverse=false&orderby=published&start-index=1`,\r\n            adapter: jsonpAdapter,\r\n            callbackParamName: 'c'\r\n        }).then(res => {\r\n            if (res.data.feed.entry) {\r\n                const processMap = res.data.feed.entry.map((arr) => {\r\n                    let id = arr.id.$t.split(\"-\").pop()\r\n                    let related = arr.link.filter((arr) => arr.rel === \"related\")\r\n                    related = Boolean(related.length) && related[0].href.split(\"/\").pop()\r\n                    arr.related = related\r\n                    arr.id = id\r\n                    return arr\r\n                })\r\n                const commentList = processMap.filter(arr => arr.related === !1)\r\n                const commentReplyList = processMap.filter(arr => typeof arr.related === \"string\")\r\n                this.setState({ commentList, commentReplyList, isFetchComment: true })\r\n            }\r\n        })\r\n    }\r\n\r\n    newReply = () => {\r\n        this.setState({ newComment: false, iFrameHeight: \"92px\" })\r\n    }\r\n\r\n    newComment = () => {\r\n        this.setState({ newComment: true, iFrameHeight: \"92px\" })\r\n    }\r\n\r\n    iFrameChangeHeight = (e) => {\r\n        if (e.origin.includes(\"blogger.com\")) {\r\n            this.setState({ iFrameHeight: e.data.substring(26) })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid item xs={12} sm={8} className={classes.box}>\r\n                <Card className={classes.card}>\r\n                    <Box p={2}>\r\n                        {this.state.isFetch ? (\r\n                            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\" maxItems={2}>\r\n                                <Link color=\"inherit\" href=\"/\">Home</Link>\r\n                                {this.state.post.category.length ? (<Link color=\"inherit\" href={\"/search/label/\" + this.state.post.category[0].term}>{this.state.post.category[0].term}</Link>) : null}\r\n                                <Typography color=\"textPrimary\">{this.state.post.title.$t}</Typography>\r\n                            </Breadcrumbs>\r\n                        ) : <Skeleton height={9} className={classes.skeletonTitle} />}\r\n                    </Box>\r\n                </Card>\r\n                <Card className={classes.card}>\r\n                    {!this.state.isFetch ? (\r\n                        <React.Fragment>\r\n                            <CardContent className={classes.skeletonContent}>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    <Skeleton height={19} className={classes.skeletonTitle} />\r\n                                    <Skeleton height={19} className={classes.skeletonTitle} />\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Skeleton variant=\"circle\" width={40} height={40} className={classes.Avatar} />\r\n                                }\r\n                                title={\r\n                                    <Skeleton height={14} className={classes.skeletoSubHeader} />\r\n                                }\r\n                                subheader={\r\n                                    <Skeleton height={12} width=\"40%\" className={classes.skeletoSubHeader} />\r\n                                }\r\n                            />\r\n                            <Box p={2}>\r\n                                <Skeleton height={16} className={classes.skeletoText} />\r\n                                <Skeleton height={16} className={classes.skeletoText} />\r\n                                <Skeleton height={16} className={classes.skeletoText} />\r\n                                <Skeleton height={300} className={classes.skeletoText} />\r\n                                <Skeleton height={16} className={classes.skeletoText} />\r\n                                <Skeleton height={16} className={classes.skeletoText} />\r\n                            </Box>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                            <React.Fragment>\r\n                                <CardContent className={classes.skeletonContent}>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        <LinesEllipsis text={this.state.post.title.$t} maxLine='2' ellipsis='...' trimRight basedOn='letters' />\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardHeader\r\n                                    avatar={this.state.post.author[0].gd$image.src === \"https://img1.blogblog.com/img/b16-rounded.gif\" ? (<Avatar aria-label=\"photos\" className={classes.avatar}>{this.state.post.author[0].name.$t[0]}</Avatar>) : (<Avatar aria-label=\"photos\" src={this.state.post.author[0].gd$image.src} className={classes.avatarTransparent}></Avatar>)\r\n                                    }\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <IconButton aria-label=\"Comment\" onClick={() => {\r\n                                                this.commentRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\r\n                                            }}>\r\n                                                <Badge badgeContent={this.state.post.thr$total.$t} color=\"secondary\">\r\n                                                    <CommentIcon />\r\n                                                </Badge>\r\n                                            </IconButton>\r\n                                            <IconButton aria-label=\"Share\" aria-controls=\"Share-menu\" aria-haspopup=\"true\" onClick={(event) => {\r\n                                                const url = this.state.post.link.filter(arr => arr.rel === \"alternate\").map(arr => arr.href).toString()\r\n                                                this.setState({ setAnchorEl: event.currentTarget, shareURL: url })\r\n                                            }}>\r\n                                                <ShareIcon />\r\n                                            </IconButton>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    title={this.state.post.author[0].name.$t}\r\n                                    subheader={\r\n                                        <Typography variant=\"caption\" display=\"block\" className={classes.dateClass}><TimeAgo date={this.state.post.published.$t} /></Typography>\r\n                                    }\r\n                                />\r\n                                <Divider />\r\n                                <Box p={2} dangerouslySetInnerHTML={{ __html: this.state.post.content.$t }} ></Box>\r\n\r\n                            </React.Fragment>\r\n                        )}\r\n                </Card>\r\n                <Box ref={this.commentRef}></Box>\r\n                {\r\n                    this.state.isFetch && this.state.post.thr$total.$t !== \"0\" ? (\r\n                        <React.Fragment>\r\n                            {!this.state.commentButtonHide ? (\r\n                                <Box textAlign=\"center\" mb={2}><Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={\r\n                                    () => {\r\n                                        this.setState({ commentButtonHide: true })\r\n                                        this.fetchCommentList()\r\n                                    }\r\n                                }>Load {this.state.post.thr$total.$t + \" \"}Comment{(this.state.post.thr$total.$t > 1 ? \"s\" : null)}</Button></Box>\r\n                            ) : <CommentList commentList={this.state.commentList} commentReplyList={this.state.commentReplyList} totalComment={this.state.post.thr$total.$t} isFetchComment={this.state.isFetchComment} blogID={/blog-?(\\d+)\\./.exec(this.state.post.id.$t)[1]} postID={this.state.post.id.$t.split(\"-\").pop()} newReply={this.newReply} isComment={this.state.newComment} iFrameHeight={this.state.iFrameHeight} />}\r\n                        </React.Fragment>\r\n                    ) : null\r\n                }\r\n                {\r\n                    this.state.isFetch ? (\r\n                        <React.Fragment>\r\n                            {\r\n                                this.state.newComment ? (\r\n                                    <Card>\r\n                                        <CardContent>\r\n                                            <iframe title=\"iframe-comment\" frameBorder=\"0\" src={\"//www.blogger.com/comment-iframe.g?blogID=\" + /blog-?(\\d+)\\./.exec(this.state.post.id.$t)[1] + \"&postID=\" + this.state.post.id.$t.split(\"-\").pop() + \"&skin=contempo\"} width=\"100%\" height={this.state.iFrameHeight}></iframe>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                ) : (\r\n                                        <Box textAlign=\"center\" mb={2}><Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={\r\n                                            () => {\r\n                                                this.newComment()\r\n                                            }\r\n                                        }>New Comment</Button></Box>\r\n                                    )\r\n                            }\r\n                        </React.Fragment>\r\n                    ) : null\r\n                }\r\n                <Menu\r\n                    id=\"Share-menu\"\r\n                    anchorEl={this.state.setAnchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.setAnchorEl)}\r\n                    onClose={() => {\r\n                        this.setState({ setAnchorEl: null })\r\n                    }}\r\n                >\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        underline=\"none\"\r\n                        href={\"//twitter.com/share?url=\" + this.state.shareURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    ><MenuItem>Twitter</MenuItem></Link>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        underline=\"none\"\r\n                        href={\"//www.facebook.com/sharer/sharer.php?u=\" + this.state.shareURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    ><MenuItem>Facebook</MenuItem></Link>\r\n                </Menu>\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PostPage);","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport PostList from './PostList'\r\nimport PostPage from './PostPage'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    box: {\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(1.5),\r\n            paddingRight: theme.spacing(1.5)\r\n        }\r\n    },\r\n})\r\n\r\nclass BodyList extends Component {\r\n    state = {}\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n            <Box>\r\n                <Container maxWidth=\"lg\">\r\n                    <Box className={classes.box}>\r\n                        <div className={classes.root}>\r\n                            <Grid container justify=\"center\">\r\n                                <Router>\r\n                                    <Switch>\r\n                                        <Route path=\"/\" exact render={props => <PostList {...props} updateLabel={this.props.updateLabel} />} />\r\n                                        <Route path=\"/([0-9]+)/([0-9]+)/([\\.\\-\\w\\S]+)\" exact render={props => <PostPage {...props} updateLabel={this.props.updateLabel} />} />\r\n                                        <Route path=\"/search/label/:label([\\w\\s]+)\" exact render={props => <PostList {...props} updateLabel={this.props.updateLabel} isLabelPage={true} />} />\r\n                                        <Route path=\"/search\" exact render={props => <PostList {...props} updateLabel={this.props.updateLabel} isSearchPage={true} />} />\r\n                                    </Switch>\r\n                                </Router>\r\n                            </Grid>\r\n                        </div>\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BodyList)","import React, { Component } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport NavBar from './components/NavBar'\nimport BodyList from './components/BodyList'\n\nclass App extends Component {\n  state = {\n    label: []\n  }\n\n  updateLabel = (arr) => {\n    this.setState({ label: arr })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <NavBar label={this.state.label} />\n        <BodyList updateLabel={this.updateLabel} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}